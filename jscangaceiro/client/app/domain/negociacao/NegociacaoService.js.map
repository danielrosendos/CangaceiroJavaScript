{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","cb","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","Error","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;;AAEV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AAEH;;AAEDM,yCAAyBC,EAAzB,EAA6B;;AAEzB,2BAAO,KAAKF,KAAL,CACNG,GADM,CACF,oBADE,EAENC,IAFM,CAGHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPE,EAQHO,OAAO;AACH,8BAAMhB,qBAAqB,uCAArB,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDiB,mDAAmC;;AAE/B,2BAAO,KAAKd,KAAL,CACNG,GADM,CACF,sBADE,EAENC,IAFM,CAGHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPE,EAQHO,OAAO;AACH,8BAAMhB,qBAAqB,0DAArB,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDkB,oDAAoC;;AAEhC,2BAAO,KAAKf,KAAL,CACNG,GADM,CACF,uBADE,EAENC,IAFM,CAGHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIZ,UAAJ,CAAe,IAAIa,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPE,EAQHO,OAAO;AACH,8BAAM,IAAIG,KAAJ,CAAU,2DAAV,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEKC,yCAAN,GAAkC;AAAA;;AAAA;;AAE9B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKnB,wBAAL,EAD4B,EAE5B,MAAKa,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOG,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAGH,yBATD,CASE,OAAMf,GAAN,EAAW;AACTgB,oCAAQC,GAAR,CAAYjB,GAAZ;AACA,kCAAM,IAAIG,KAAJ,CAAU,kDAAV,CAAN;AACH;AAd6B;AAgBjC;;AA3E0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\r\nimport { Negociacao } from './Negociacao.js';\r\nimport { ApplicationException } from '../../util/ApplicationException.js';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemana(cb) {\r\n\r\n        return this._http\r\n        .get('negociacoes/semana')\r\n        .then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto => \r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                return negociacoes;\r\n            },\r\n            err => {\r\n                throw ApplicationException('Não foi possível obter as negociações');          \r\n            }\r\n        );\r\n    \r\n    }\r\n\r\n    obtemNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http\r\n        .get('negociacoes/anterior')\r\n        .then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto => \r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                return negociacoes;\r\n            },\r\n            err => {\r\n                throw ApplicationException('Não foi possível obter as negociações da semana anterior');          \r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http\r\n        .get('negociacoes/retrasada')\r\n        .then(\r\n            dados => {\r\n                const negociacoes = dados.map(objeto => \r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n                return negociacoes;\r\n            },\r\n            err => {\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');          \r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    async obtemNegociacoesDoPeriodo() { \r\n\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obtemNegociacoesDaSemanaAnterior(),\r\n                this.obtemNegociacoesDaSemanaRetrasada()\r\n            ]);\r\n            return periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\r\n        } catch(err) {\r\n            console.log(err);\r\n            throw new Error('Não foi possível obter as negociações do periodo')\r\n        }\r\n\r\n    }\r\n\r\n}"]}